<?xml version="1.0" standalone="yes" ?>
<package version="2.1" displayname="Featured Products" debug="false">
	<query name="FeaturedProducts" rowElementName="FeaturedProduct">
		<sql>
			<![CDATA[                 
                --this is only for the comma delimited string of productids
                declare @FeaturedProducts varchar(500);
                set @FeaturedProducts = replace(@RawFeaturedProducts, ' ', '')

                declare @sql varchar(max);
                set @sql = 'select top ('+ cast(@NumberOfItems as varchar(50)) +') NEWID() AS ProductOrdering, p.ProductID, p.Name, p.SEName, p.HidePriceUntilCart, pv.Price, pv.SalePrice, pv.Points, pv.VariantID, sp.name as SalesPromptName, pv.msrp '
                        +'from product p '
                        +'inner join productvariant pv on (pv.productid = p.productid and pv.isdefault = 1) ' +
                        --join on an entity if an entity type was specified
                        (case
	                        when (@FeaturedEntityType = 'category' and @UseCommaDelimitedProductList = 'false') then 
		                        'inner join productcategory pe on (p.productid = pe.productid and pe.categoryid = ' + cast(@FeaturedEntityID as varchar(10)) + ') '
	                        when (@FeaturedEntityType = 'section' and @UseCommaDelimitedProductList = 'false') then 
		                        'inner join productsection pe on (p.productid = pe.productid and pe.sectionid = ' + cast(@FeaturedEntityID as varchar(10))  + ') '
	                        when (@FeaturedEntityType = 'manufacturer' and @UseCommaDelimitedProductList = 'false') then 
		                        'inner join productmanufacturer pe on (p.productid = pe.productid and pe.manufacturerid = ' + cast(@FeaturedEntityID as varchar(10))  + ') '
	                        when (@FeaturedEntityType = 'vector' and @UseCommaDelimitedProductList = 'false') then 
		                        'inner join productvector pe on (p.productid = pe.productid and pe.vectorid = ' + cast(@FeaturedEntityID as varchar(10))  + ') '
	                        when (@FeaturedEntityType = 'genre' and @UseCommaDelimitedProductList = 'false') then 
		                        'inner join productgenre pe on (p.productid = pe.productid and pe.genreid = ' + cast(@FeaturedEntityID as varchar(10))  + ') '
	                        else
		                        ''
                        end)
                        +
                        --join to product store if product filtering is on
                        (case
	                        when @FilterProduct = 'true' then 
		                        'inner join productstore ps on (p.productid = ps.productid and ps.storeid = ' + cast(@StoreID as varchar(10))  + ') '
	                        else
		                        ''
                        end)
                        
                        +'inner join salesprompt sp on (p.salespromptid = sp.salespromptid) '+
                        --join on the comma delimited list if there is one
                        (case
	                        when @UseCommaDelimitedProductList = 'true' then 
		                        'inner join dbo.split(''' + @FeaturedProducts + ''', '','') fp on p.productid = cast(fp.items as int) '
	                        else
		                        ''
                        end)
                		
                        +'where p.published = 1 '
                        +'and p.deleted = 0 '
                        +'and pv.published = 1 '
                        +'and pv.deleted = 0 '
                        +'and pv.inventory >= ' + cast(@MinInventoryLevel as varchar(10)) + ' '
                        +'and pv.inventory >= ' + cast(@InvFilter as varchar(10)) + ' '+
                        
                        (case
	                        when @RandomOrder = 'true' then 
		                        'order by ProductOrdering '
	                        else
		                        ''
                        end)
                		
                exec(@sql);
			]]>
		</sql>
		<queryparam paramname="@UseCommaDelimitedProductList" paramtype="runtime" requestparamname="usecommadelimitedproductlist" sqlDataType="varchar" defvalue="false"  validationpattern="" />
		<queryparam paramname="@RawFeaturedProducts" paramtype="runtime" requestparamname="commadelimitedproductlist" sqlDataType="varchar" defvalue=""  validationpattern="" />
		<queryparam paramname="@FeaturedEntityType" paramtype="runtime" requestparamname="featuredentitytype" sqlDataType="varchar" defvalue="category"  validationpattern="" />
		<queryparam paramname="@FeaturedEntityID"   paramtype="runtime" requestparamname="featuredentityid"    sqlDataType="int"     defvalue="0"      validationpattern="" />
		<queryparam paramname="@InvFilter"   paramtype="appconfig" requestparamname="HideProductsWithLessThanThisInventoryLevel"    sqlDataType="int"     defvalue="0"      validationpattern="" />
		<queryparam paramname="@MinInventoryLevel"   paramtype="runtime" requestparamname="mininventorylevel"    sqlDataType="int"     defvalue="1"      validationpattern="" />
		<queryparam paramname="@NumberOfItems"   paramtype="runtime" requestparamname="numberofitems"    sqlDataType="int"     defvalue="4"      validationpattern="" />
		<queryparam paramname="@RandomOrder"   paramtype="runtime" requestparamname="randomorder"    sqlDataType="varchar"     defvalue="false"      validationpattern="" />
		<queryparam paramname="@StoreID"	      paramtype="runtime" requestparamname="StoreID"							sqlDataType="int"	    defvalue="1"      validationpattern="" />
		<queryparam paramname="@FilterProduct"  paramtype="runtime" requestparamname="FilterProduct"				sqlDataType="varchar"	    defvalue="False"      validationpattern="" />
	</query>
	<PackageTransform>
		<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:aspdnsf="urn:aspdnsf" exclude-result-prefixes="aspdnsf">
			<xsl:output method="html" omit-xml-declaration="yes" />
			<xsl:param name="Columns">
				<xsl:choose>
					<xsl:when test="/root/Runtime/columns != ''">
						<xsl:value-of select="number(/root/Runtime/columns)"/>
					</xsl:when>
					<xsl:otherwise>4</xsl:otherwise>
				</xsl:choose>
			</xsl:param>
			<xsl:param name="ShowPrice">
				<xsl:choose>
					<xsl:when test="/root/Runtime/showprice = 'true'">
						<xsl:text>true</xsl:text>
					</xsl:when>
					<xsl:otherwise>false</xsl:otherwise>
				</xsl:choose>
			</xsl:param>
			<xsl:param name="ShowCartForm">
				<xsl:choose>
					<xsl:when test="/root/Runtime/showcartform = 'true'">
						<xsl:text>true</xsl:text>
					</xsl:when>
					<xsl:otherwise>false</xsl:otherwise>
				</xsl:choose>
			</xsl:param>
			<xsl:param name="Header">
				<xsl:choose>
					<xsl:when test="/root/Runtime/headertext != ''">
						<xsl:value-of select="/root/Runtime/headertext" disable-output-escaping="yes" />
					</xsl:when>
					<xsl:otherwise>
						<xsl:text>Featured Products</xsl:text>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:param>
			<xsl:template match="/">
				<xsl:choose>
					<xsl:when test="count(/root/FeaturedProducts/FeaturedProduct) &gt; 0 ">
						<div class="featured-products other-products-wrap">
							<div class="group-header featured-items-header">
								<xsl:value-of select="$Header" disable-output-escaping="yes" />
							</div>
							<div class="row featured-item-row">
								<xsl:apply-templates select="/root/FeaturedProducts/FeaturedProduct" />
							</div>
						</div>
						<div class="clearBoth"></div>
					</xsl:when>
				</xsl:choose>
			</xsl:template>
			<xsl:template match="FeaturedProduct">
				<xsl:variable name="delta">
					<xsl:choose>
						<xsl:when test="(count(/root/FeaturedProducts/FeaturedProduct) mod number($Columns)) = 0">0</xsl:when>
						<xsl:otherwise>
							<xsl:value-of select="number($Columns)-(count(/root/FeaturedProducts/FeaturedProduct) mod number($Columns))"/>
						</xsl:otherwise>
					</xsl:choose>
				</xsl:variable>
				<xsl:variable name="rows" select="ceiling(count(/root/FeaturedProducts/FeaturedProduct) div number($Columns))" />
				<xsl:call-template name="ProductCell"></xsl:call-template>
			</xsl:template>
			<xsl:template name="ProductCell">
				<xsl:param name="SalePrice">
					<xsl:choose>
						<xsl:when test="SalePrice=''">
							0
						</xsl:when>
						<xsl:otherwise>
							<xsl:value-of select="SalePrice" />
						</xsl:otherwise>
					</xsl:choose>
				</xsl:param>
				<xsl:param name="SalesPromptName" select="aspdnsf:GetMLValue(SalesPromptName)" />
				<xsl:param name="CellWidth" select="100 div $Columns" />
				<xsl:variable name="Name" select="aspdnsf:GetMLValue(Name)"></xsl:variable>
				<xsl:variable name="SEAltText" select="aspdnsf:GetMLValue(SEAltText)"></xsl:variable>
				<xsl:variable name="AltText">
					<xsl:choose>
						<xsl:when test="$SEAltText=''">
							<xsl:value-of select="$Name" />
						</xsl:when>
						<xsl:otherwise>
							<xsl:value-of select="$SEAltText" />
						</xsl:otherwise>
					</xsl:choose>
				</xsl:variable>
				<xsl:variable name="ImageUrl" select="aspdnsf:ImageUrl(ProductID, 'product', 'icon', 0)" />
				<xsl:if test="position() mod 4 = 1 and position() &gt; 1">
					<xsl:variable name="NewRowHtml">
						<xsl:text>&lt;/div&gt;&lt;div class="row  featured-item-row"&gt;</xsl:text>
					</xsl:variable>
					<xsl:value-of select="$NewRowHtml" disable-output-escaping="yes" />
				</xsl:if>
				<div class="featured-item grid-item col-xs-6 col-sm-3">
					<div class="featured-item-image-wrap grid-item-image-wrap">
						<a href="{aspdnsf:ProductLink(ProductID, SEName, 0)}">
							<img src="{$ImageUrl}" alt="{$AltText}" class="img-thumbnail img-responsive featured-item-image grid-item-image" />
						</a>
					</div>
					<div class="featured-item-name-wrap grid-item-name-wrap">
						<a href="{aspdnsf:ProductLink(ProductID, SEName, 0)}">
							<xsl:value-of select="aspdnsf:GetMLValue(Name)" disable-output-escaping="yes"/>
						</a>
					</div>
					<xsl:if test="$ShowPrice = 'true'" >
						<div class="grid-item-price-wrap">
							<xsl:value-of select="aspdnsf:GetVariantPrice(VariantID, HidePriceUntilCart, Price, $SalePrice, 0, Points, $SalesPromptName)" disable-output-escaping="yes"/>
						</div>
					</xsl:if>
					<xsl:if test="$ShowCartForm = 'true'" >
						<div class="form-group add-to-cart-group">
							<xsl:value-of select="aspdnsf:XmlPackage('simpleaddtocartform.xml.config', concat('productid=', ProductID))" disable-output-escaping="yes"/>							
						</div>
					</xsl:if>
				</div>
				<xsl:if test="position() mod 2 = 0">
					<div class="clearfix visible-xs featured-item-extra-small-clear"></div>
				</xsl:if>
			</xsl:template>
		</xsl:stylesheet>
	</PackageTransform>
</package>